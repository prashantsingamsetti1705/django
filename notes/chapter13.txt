Working with advanced model concepts
====================================
Model Inheritance
----------------------------
1).Abstract Base Class model inheritance
2).Multi table inheritance
		3).Multi level inheritance
		4).Multiple inheritance
5).Proxy model inheritance

1).Abstract Base Class model inheritance:
---------------------------------------------------------------
-->If several model classes having some common fields, then it is not recommended to write these fields in every model class separately, because it increases length of the code and reduces readability.
-->We have to separate those common fields into a separate Model clas which is nothing but Base class. If we extend Base class then automatically common fields will be inherited to every child class.

Ex:
----
django-admin startproject miproject
py manage.py startapp testapp
Add app in settings.py

models.py
---------------
class ContactInfo(models.Model):
    name = models.CharField(max_length=30)
    email = models.EmailField()
    address = models.CharField(max_length=30)
    class Meta:
        abstract = True
class Student(ContactInfo):
    rollno = models.IntegerField()
    marks = models.IntegerField()
class Teacher(ContactInfo):
    subject = models.CharField(max_length=30)
    salary = models.FloatField()

admin.py
--------------
from testapp.models import *
admin.site.register(Student)
admin.site.register(Teacher)

Note:
	ContactInfo class is abstract class and hence table won't be created.
	This type of inheritance is applicable only at code level but not at database level.

2).Multi table inheritance:
---------------------------------------
-->If the Base class is not abstract, then such type of inheritance is called as multi table inheritance.
-->This type of inheritance applicable at code level and DB level.
-->In multi table inheritance, inside database, for both parent and child, tables will be craeted.

models.py
---------------
class ContactInfo1(models.Model):
    name = models.CharField(max_length=30)
    email = models.EmailField()
    address = models.CharField(max_length=30)
class Student1(ContactInfo1):
    rollno = models.IntegerField()
    marks = models.IntegerField()
class Teacher1(ContactInfo1):
    subject = models.CharField(max_length=30)
    salary = models.FloatField()

admin.py
--------------
admin.site.register(ContactInfo1)
admin.site.register(Student1)
admin.site.register(Teacher1)

3).Multi level inheritance:
---------------------------------------
Inheritance at multiple levels

models.py
---------------
class Person(models.Model):
    name = models.CharField(max_length=30)
    age = models.IntegerField()
class Employee(Person):
    eno = models.IntegerField()
    esal = models.FloatField()
class Manager(Employee):
    exp = models.IntegerField()
    team_size = models.IntegerField()

admin.py
--------------
admin.site.register(Person)
admin.site.register(Employee)
admin.site.register(Manager)

-->It is also multi table inheritance only internally.
